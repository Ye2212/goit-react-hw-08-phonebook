{"version":3,"file":"static/js/637.7de602d8.chunk.js","mappings":"yUACaA,EAAOC,EAAAA,EAAAA,KAAH,4iBAoBJC,EAAQD,EAAAA,EAAAA,MAAH,gDAGLE,EAAOF,EAAAA,EAAAA,KAAH,6HAOJG,EAAQH,EAAAA,EAAAA,MAAH,gcAsBLI,EAASJ,EAAAA,EAAAA,OAAH,wVAgBNK,EAAQL,EAAAA,EAAAA,GAAH,yJ,kICzDH,SAASM,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,iCACE,SAAC,KAAD,+DACA,UAAC,KAAD,CAAMC,SAVW,SAAAC,GACnBA,EAAEC,iBACFb,EAASc,EAAAA,EAAAA,MAAqB,CAAEX,MAAAA,EAAOE,SAAAA,KACvCD,EAAS,IACTE,EAAY,KAMV,WACE,UAAC,KAAD,YACE,SAAC,KAAD,sBACA,SAAC,KAAD,CACES,SAAUR,EACVS,KAAK,QACLP,KAAK,QACLC,MAAOP,EACPc,aAAa,YAIjB,8BACE,SAAC,KAAD,wBACA,SAAC,KAAD,CACEF,SAAUR,EACVS,KAAK,WACLP,KAAK,WACLC,MAAOL,QAGX,SAAC,KAAD,CAAQW,KAAK,SAAb","sources":["components/Login/Login.styled.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nexport const Form = styled.form`\n  margin: 0 auto;\n  padding: 35px;\n  width: 300px;\n  height: 200px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  // transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  // &:hover {\n  //   transform: scale(1.005);\n  // }\n  // cursor: zoom-in;\n  // border: 2px dotted #fc02f9;\n  // background-color: #00000042;\n  // box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 1),\n  // 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\nexport const Label = styled.label`\n  margin-bottom: 10px;\n`;\nexport const Span = styled.span`\n  display: block;\n  margin-bottom: 5px;\n  font-size: 12px;\n  opacity: 0.8;\n  // color: #fc02f9;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  height: 25px;\n  color: inherit;\n  font-weight: 700;\n  background-color: transparent;\n  padding: 0 10px 0 10px;\n  padding: 0 10px 0 10px;\n  font-size: 20px;\n  border: 1px solid #fc02f9;\n  border-radius: 3px;\n  // border-bottom: 1px solid #fc02f9;\n  font: inherit;\n  font-size: inherit;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n  }\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  margin-top: 15px;\n  background-color: #fc02f9;\n  border-radius: 3px;\n  color: black;\n  // color: rgba(255, 255, 255, 0.737);\n  font-weight: 700;\n  font-size: 12px;\n  border: none;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    opacity: 0.7;\n  }\n`;\nexport const Title = styled.h2`\n  // margin: 100px auto;\n  font-size: 20px;\n  font-weight: 500;\n  color: rgba(255, 255, 255, 0.537);\n  text-align: center;\n`;\n","import { useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport authOperations from '../redux/auth/auth-operations';\nimport {\n  Title,\n  Form,\n  Label,\n  Span,\n  Input,\n  Button,\n} from '../components/Login/Login.styled';\n\nexport default function LoginPage() {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Title>Do You already have an account? Please, log in.</Title>\n      <Form onSubmit={handleSubmit}>\n        <Label>\n          <Span>E-mail</Span>\n          <Input\n            onChange={handleChange}\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            autocomplete=\"off\"\n          />\n        </Label>\n\n        <label>\n          <Span>Password</Span>\n          <Input\n            onChange={handleChange}\n            type=\"password\"\n            name=\"password\"\n            value={password}\n          />\n        </label>\n        <Button type=\"submit\">Log In</Button>\n      </Form>\n    </>\n  );\n}\n"],"names":["Form","styled","Label","Span","Input","Button","Title","LoginPage","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","e","preventDefault","authOperations","onChange","type","autocomplete"],"sourceRoot":""}