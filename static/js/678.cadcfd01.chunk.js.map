{"version":3,"file":"static/js/678.cadcfd01.chunk.js","mappings":"+OAEaA,EAAOC,EAAAA,EAAAA,KAAH,+WAcJC,EAAQD,EAAAA,EAAAA,MAAH,mEAILE,EAAOF,EAAAA,EAAAA,KAAH,0GAMJG,EAAQH,EAAAA,EAAAA,MAAH,6ZAsBLI,EAAgBJ,EAAAA,EAAAA,OAAH,wV,oBCtC1B,EAN0B,CACxBK,YALkB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OAM1CC,eALqB,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QAM7CC,WALiB,SAAAL,GAAK,OAAIA,EAAMC,SAASK,WAMzCC,SALe,SAAAP,GAAK,OAAIA,EAAMC,SAASO,Q,oBCyEzC,I,QAAA,EArEA,WACE,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KACMZ,GAAWa,EAAAA,EAAAA,IAAYC,EAAAA,aACvBC,GAAWC,EAAAA,EAAAA,MAyBXC,EAAY,WAChBP,EAAQ,IACRE,EAAU,KAGZ,OACE,UAACpB,EAAD,CAAM0B,SA1Ba,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAa,CACjBZ,KAAAA,EACAE,OAAAA,GAEF,GACEX,EAASsB,MACP,SAAAC,GAAO,OAAIA,EAAQd,KAAKe,gBAAkBf,EAAKe,iBAGjD,OAAOC,MAAM,GAAD,OAAIhB,EAAJ,4BAEdM,GAASW,EAAAA,EAAAA,IAAgBL,IAGzBJ,KASA,WACE,UAACvB,EAAD,YACE,SAACC,EAAD,oBACA,SAACC,EAAD,CACE+B,KAAK,OACLlB,KAAK,OACLmB,MAAOnB,EACPoB,SApCiB,SAAAV,GAAC,OAAIT,EAAQS,EAAEW,cAAcF,QAqC9CG,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAACvC,EAAD,YACE,SAACC,EAAD,qBACA,SAACC,EAAD,CACEsC,YAAY,GACZP,KAAK,MACLlB,KAAK,QACLmB,MAAOjB,EACPkB,SAhDkB,SAAAV,GAAC,OAAIP,EAAUO,EAAEW,cAAcF,QAiDjDG,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,UAACpC,EAAD,CAAe8B,KAAK,SAApB,WACE,iBAAMQ,MAAO,CAAEC,YAAa,QAA5B,kBACA,SAAC,MAAD,WCpEKC,EAAO5C,EAAAA,EAAAA,KAAH,0GAKJ6C,EAAS7C,EAAAA,EAAAA,KAAH,mFAIN8C,EAAc9C,EAAAA,EAAAA,EAAH,+CAGX+C,EAAY/C,EAAAA,EAAAA,OAAH,yY,UCUtB,I,IAAA,EAnBA,YAA+C,IAA5BgB,EAA2B,EAA3BA,KAAME,EAAqB,EAArBA,OAAQ8B,EAAa,EAAbA,UACzB1B,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iCACE,UAACuB,EAAD,YACE,SAACF,EAAD,UAAO5B,KACP,SAAC,EAAD,UAASE,QAEX,SAAC6B,EAAD,CACEb,KAAK,SACLe,QAAS,kBAAM3B,GAAS4B,EAAAA,EAAAA,IAAmBF,KAF7C,UAIE,SAAC,MAAD,UCjBKG,EAAgBnD,EAAAA,EAAAA,GAAH,8OAWboD,EAAkBpD,EAAAA,EAAAA,GAAH,2JC4B5B,I,MAAA,EAjCA,WACE,IAAMsB,GAAWC,EAAAA,EAAAA,MACXhB,GAAWa,EAAAA,EAAAA,IAAYC,EAAAA,aACvBgC,GAAcjC,EAAAA,EAAAA,IAAYC,EAAAA,iBAIhCiC,EAAAA,EAAAA,YAAU,WACRhC,GAASiC,EAAAA,EAAAA,SACR,CAACjC,IAEJ,IAOMkC,EAPmB,WACvB,IAAMC,EAAmBJ,EAAYtB,cACrC,OAAOxB,EAASG,QAAO,SAAAoB,GAAO,OAC5BA,EAAQd,KAAKe,cAAc2B,SAASD,MAIZE,GAC5B,OACE,SAACR,EAAD,UACG5C,GACCiD,EAAoBI,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAI7C,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACnC,OACE,SAACkC,EAAD,WACE,SAAC,EAAD,CAASpC,KAAMA,EAAME,OAAQA,EAAQ8B,UAAWa,KAD5BA,S,UC7BrBC,EAAc9D,EAAAA,EAAAA,MAAH,kFAMX+D,EAAa/D,EAAAA,EAAAA,EAAH,0GAKVgE,EAAchE,EAAAA,EAAAA,MAAH,2eCMxB,I,EAAA,EAfA,WACE,IAAMsB,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAACuC,EAAD,YACE,SAACC,EAAD,qCACA,SAACC,EAAD,CAAa9B,KAAK,OAAOlB,KAAK,SAASoB,SAPjB,SAAAV,GAExBJ,GAAS2C,EAAAA,EAAAA,GAAgBvC,EAAEW,cAAcF,eCRhC+B,EAAUlE,EAAAA,EAAAA,IAAH,yHCGL,SAASmE,IACtB,OACE,UAACD,EAAD,YACE,SAAC,EAAD,KACA,SAAC,EAAD,KACA,SAAC,EAAD","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.styled.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 60px;\n  padding: 15px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  // background-color: black;\n  // box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 1),\n  // 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Label = styled.label`\n  margin: 0 10px 5px;\n  font-size: 12px;\n`;\nexport const Text = styled.span`\n  font-weight: 600;\n  margin-bottom: 5px;\n  color: rgba(255, 255, 255, 0.737);\n`;\n\nexport const Input = styled.input`\nwidth: 250px;\nheight: 25px;\ncolor: inherit;\nfont-weight: 700;\nbackground-color: transparent;\npadding: 0 10px 0 10px;\npadding: 0 10px 0 10px;\nfont-size: 20px;\nborder: 1px solid #fc02f9;\nborder-radius: 3px;\n// border-bottom: 1px solid #fc02f9;\nfont: inherit;\nfont-size: inherit;\noutline: none;\npadding-left: 4px;\npadding-right: 4px;\n&::placeholder {\n  font: inherit;\n}\n  }`;\n\nexport const AddContactBtn = styled.button`\n  padding: 10px;\n  margin-top: 15px;\n  background-color: #fc02f9;\n  border-radius: 3px;\n  // color: rgba(255, 255, 255, 0.737);\n  color: black;\n  font-weight: 700;\n  font-size: 12px;\n  border: none;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n","const getContacts = state => state.contacts.items;\nconst getFilterValue = state => state.contacts.filter;\nconst getLoading = state => state.contacts.isLoading;\nconst getError = state => state.contacts.error;\nconst contactsSelectors = {\n  getContacts,\n  getFilterValue,\n  getLoading,\n  getError,\n};\nexport default contactsSelectors;\n","import { useState } from 'react';\nimport { Form, Label, Text, Input, AddContactBtn } from './ContactForm.styled';\nimport { FiUserPlus } from 'react-icons/fi';\nimport { useDispatch, useSelector } from 'react-redux';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\nimport { addContactThunk } from 'redux/contacts/contacts-operations';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const dispatch = useDispatch();\n\n  const handleChangeName = e => setName(e.currentTarget.value);\n  const handleChangePhone = e => setNumber(e.currentTarget.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name,\n      number,\n    };\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContactThunk(newContact));\n    // alert(`${name} is added to your contacts`);\n\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Text>Name</Text>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        <Text>Phone</Text>\n        <Input\n          placeholder=\"\"\n          type=\"tel\"\n          name=\"phone\"\n          value={number}\n          onChange={handleChangePhone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <AddContactBtn type=\"submit\">\n        <span style={{ marginRight: '10px' }}>Add</span>\n        <FiUserPlus />\n      </AddContactBtn>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Name = styled.span`\n  font-weight: 600;\n  margin-right: 10px;\n  color: rgba(255, 255, 255, 0.737);\n`;\nexport const Number = styled.span`\n  font-weight: 700;\n  color: rgba(255, 255, 255, 0.737);\n`;\nexport const ContactItem = styled.p`\n  margin-right: 15px;\n`;\nexport const DeleteBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  border-radius: 4px;\n  height: 30px;\n  padding: 10px;\n\n  border: none;\n  background-color: #fc02f9;\n  // opacity: 0.4;\n  color: black;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n`;\n","import { ContactItem, DeleteBtn, Name, Number } from './Contact.styled';\nimport { FaTrash } from 'react-icons/fa';\nimport { deleteContactThunk } from 'redux/contacts/contacts-operations';\nimport { useDispatch } from 'react-redux';\n\nfunction Contact({ name, number, contactId }) {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <ContactItem>\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n      </ContactItem>\n      <DeleteBtn\n        type=\"button\"\n        onClick={() => dispatch(deleteContactThunk(contactId))}\n      >\n        <FaTrash />\n      </DeleteBtn>\n    </>\n  );\n}\n\nexport default Contact;\n","import styled from '@emotion/styled';\nexport const ContactListEl = styled.ul`\n  // margin: 10px auto 0;\n  padding: 15px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  border-radius: 5px;\n  // background-color: black;\n`;\nexport const ContactListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Contact from 'components/Contact/Contact';\nimport { ContactListEl, ContactListItem } from './ContactList.styled';\nimport { fetchContactsThunk } from 'redux/contacts/contacts-operations';\nimport contactsSelectors from 'redux/contacts/contacts-selectors';\n\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  const filterValue = useSelector(contactsSelectors.getFilterValue);\n  // const isLoading = useSelector(getLoading);\n  // const isError = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContactsThunk());\n  }, [dispatch]);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filterValue.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContactList = filteredContacts();\n  return (\n    <ContactListEl>\n      {contacts &&\n        filteredContactList.map(({ id, name, number }) => {\n          return (\n            <ContactListItem key={id}>\n              <Contact name={name} number={number} contactId={id} />\n            </ContactListItem>\n          );\n        })}\n    </ContactListEl>\n  );\n}\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  font-size: 12px;\n  display: block;\n  margin: 0 auto;\n`;\n\nexport const FilterText = styled.p`\n  font-weight: 600;\n  margin-bottom: 5px;\n  color: rgba(255, 255, 255, 0.737);\n`;\nexport const FilterInput = styled.input`\n  margin-bottom: 50px;\n  display: block;\n  width: 250px;\n  height: 25px;\n  color: inherit;\n  font-weight: 700;\n  background-color: transparent;\n  padding: 0 10px 0 10px;\n  padding: 0 10px 0 10px;\n  font-size: 20px;\n  border: 1px solid #fc02f9;\n  border-radius: 3px;\n  // border-bottom: 1px solid #fc02f9;\n  font: inherit;\n  font-size: inherit;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { filteredContact } from 'redux/contacts/contacts-slice';\nimport { FilterLabel, FilterText, FilterInput } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const changeFilterInput = e => {\n    // console.log(e.currentTarget.value);\n    dispatch(filteredContact(e.currentTarget.value));\n  };\n  return (\n    <FilterLabel>\n      <FilterText>Find contacts by name</FilterText>\n      <FilterInput type=\"text\" name=\"filter\" onChange={changeFilterInput} />\n    </FilterLabel>\n  );\n}\n\nexport default Filter;\n","import styled from '@emotion/styled';\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Wrapper } from './ContactsPage.styled';\nexport default function ContactsPage() {\n  return (\n    <Wrapper>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Wrapper>\n  );\n}\n"],"names":["Form","styled","Label","Text","Input","AddContactBtn","getContacts","state","contacts","items","getFilterValue","filter","getLoading","isLoading","getError","error","useState","name","setName","number","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","formReset","onSubmit","e","preventDefault","newContact","some","contact","toLowerCase","alert","addContactThunk","type","value","onChange","currentTarget","pattern","title","required","placeholder","style","marginRight","Name","Number","ContactItem","DeleteBtn","contactId","onClick","deleteContactThunk","ContactListEl","ContactListItem","filterValue","useEffect","fetchContactsThunk","filteredContactList","normalizedFilter","includes","filteredContacts","map","id","FilterLabel","FilterText","FilterInput","filteredContact","Wrapper","ContactsPage"],"sourceRoot":""}