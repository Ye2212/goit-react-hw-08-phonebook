{"version":3,"file":"static/js/438.86b0adf3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Contact/Contact.styled.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","redux/contactsSelectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.styled.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  margin-bottom: 60px;\n  padding: 15px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  border-radius: 5px;\n  // background-color: black;\n  // box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 1),\n  // 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Label = styled.label`\n  margin: 0 10px 5px;\n  font-size: 12px;\n`;\nexport const Text = styled.span`\n  font-weight: 600;\n  margin-bottom: 5px;\n  color: rgba(255, 255, 255, 0.737);\n`;\n\nexport const Input = styled.input`\nwidth: 250px;\nheight: 25px;\ncolor: inherit;\nfont-weight: 700;\nbackground-color: transparent;\npadding: 0 10px 0 10px;\npadding: 0 10px 0 10px;\nfont-size: 20px;\nborder: 1px solid #fc02f9;\nborder-radius: 3px;\n// border-bottom: 1px solid #fc02f9;\nfont: inherit;\nfont-size: inherit;\noutline: none;\npadding-left: 4px;\npadding-right: 4px;\n&::placeholder {\n  font: inherit;\n}\n  }`;\n\nexport const AddContactBtn = styled.button`\n  padding: 10px;\n  margin-top: 15px;\n  background-color: #fc02f9;\n  border-radius: 3px;\n  // color: rgba(255, 255, 255, 0.737);\n  color: black;\n  font-weight: 700;\n  font-size: 12px;\n  border: none;\n  cursor: pointer;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    opacity: 0.7;\n  }\n`;\n","import { useState } from 'react';\nimport { Form, Label, Text, Input, AddContactBtn } from './ContactForm.styled';\nimport { FiUserPlus } from 'react-icons/fi';\nimport { nanoid } from 'nanoid';\nimport {\n  useFetchContactsQuery,\n  useCreateContactMutation,\n} from 'redux/contactsApi';\n\nfunction ContactForm() {\n  const { data: contacts } = useFetchContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleChangeName = e => setName(e.currentTarget.value);\n  const handleChangePhone = e => setPhone(e.currentTarget.value);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      phone,\n    };\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n    await createContact(newContact);\n    alert(`${name} is added to your contacts`);\n\n    formReset();\n  };\n\n  const formReset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        <Text>Name</Text>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChangeName}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n      <Label>\n        <Text>Phone</Text>\n        <Input\n          placeholder=\"\"\n          type=\"tel\"\n          name=\"phone\"\n          value={phone}\n          onChange={handleChangePhone}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <AddContactBtn type=\"submit\">\n        <span style={{ marginRight: '10px' }}>Add</span>\n        <FiUserPlus />\n      </AddContactBtn>\n    </Form>\n  );\n}\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const Name = styled.span`\n  font-weight: 600;\n  margin-right: 10px;\n  color: rgba(255, 255, 255, 0.737);\n`;\nexport const Number = styled.span`\n  font-weight: 700;\n  color: rgba(255, 255, 255, 0.737);\n`;\nexport const ContactItem = styled.p`\n  margin-right: 15px;\n`;\nexport const DeleteBtn = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 30px;\n  border-radius: 4px;\n  height: 30px;\n  padding: 10px;\n\n  border: none;\n  background-color: #fc02f9;\n  // opacity: 0.4;\n  color: black;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n`;\n","import { ContactItem, DeleteBtn, Name, Number } from './Contact.styled';\nimport { FaTrash } from 'react-icons/fa';\n\nfunction Contact({ name, phone, contactId, onDeleteContact }) {\n  return (\n    <>\n      <ContactItem>\n        <Name>{name}</Name>\n        <Number>{phone}</Number>\n      </ContactItem>\n      <DeleteBtn type=\"button\" onClick={() => onDeleteContact(contactId)}>\n        <FaTrash />\n      </DeleteBtn>\n    </>\n  );\n}\n\nexport default Contact;\n","import styled from '@emotion/styled';\nexport const ContactListEl = styled.ul`\n  // margin: 10px auto 0;\n  padding: 15px;\n  width: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: stretch;\n  border-radius: 5px;\n  // background-color: black;\n`;\nexport const ContactListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport Contact from 'components/Contact/Contact';\nimport { ContactListEl, ContactListItem } from './ContactList.styled';\nimport {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n} from 'redux/contactsApi';\nimport { getFilter } from 'redux/contactsSelectors';\n\nfunction ContactList() {\n  const { data = [] } = useFetchContactsQuery();\n  const { filter } = useSelector(state => getFilter(state));\n\n  const [deleteContact] = useDeleteContactMutation();\n  const deleteSelectedContact = contactId => deleteContact(contactId);\n\n  const filteredContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return data.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const filteredContactList = filteredContacts();\n  return (\n    <ContactListEl>\n      {data &&\n        filteredContactList.map(({ id, name, phone }) => {\n          return (\n            <ContactListItem key={id}>\n              <Contact\n                name={name}\n                phone={phone}\n                onDeleteContact={deleteSelectedContact}\n                contactId={id}\n              />\n            </ContactListItem>\n          );\n        })}\n    </ContactListEl>\n  );\n}\n\nexport default ContactList;\n","export const getFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  font-size: 12px;\n  display: block;\n  margin: 0 auto;\n`;\n\nexport const FilterText = styled.p`\n  font-weight: 600;\n  margin-bottom: 5px;\n  color: rgba(255, 255, 255, 0.737);\n`;\nexport const FilterInput = styled.input`\n  margin-bottom: 50px;\n  display: block;\n  width: 250px;\n  height: 25px;\n  color: inherit;\n  font-weight: 700;\n  background-color: transparent;\n  padding: 0 10px 0 10px;\n  padding: 0 10px 0 10px;\n  font-size: 20px;\n  border: 1px solid #fc02f9;\n  border-radius: 3px;\n  // border-bottom: 1px solid #fc02f9;\n  font: inherit;\n  font-size: inherit;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n  &::placeholder {\n    font: inherit;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/contactsSlice';\nimport { FilterLabel, FilterText, FilterInput } from './Filter.styled';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n\n  const changeFilterInput = e => dispatch(changeFilter(e.currentTarget.value));\n  return (\n    <FilterLabel>\n      <FilterText>Find contacts by name</FilterText>\n      <FilterInput type=\"text\" name=\"filter\" onChange={changeFilterInput} />\n    </FilterLabel>\n  );\n}\n\nexport default Filter;\n","import styled from '@emotion/styled';\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n","import ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport { Wrapper } from './ContactsPage.styled';\nexport default function ContactsPage() {\n  return (\n    <Wrapper>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </Wrapper>\n  );\n}\n"],"names":["Form","styled","Label","Text","Input","AddContactBtn","contacts","useFetchContactsQuery","data","useCreateContactMutation","createContact","useState","name","setName","phone","setPhone","handleSubmit","e","preventDefault","newContact","id","nanoid","some","contact","toLowerCase","alert","formReset","onSubmit","type","value","onChange","currentTarget","pattern","title","required","placeholder","style","marginRight","Name","Number","ContactItem","DeleteBtn","contactId","onDeleteContact","onClick","ContactListEl","ContactListItem","filter","useSelector","state","getFilter","useDeleteContactMutation","deleteContact","deleteSelectedContact","filteredContactList","normalizedFilter","includes","filteredContacts","map","FilterLabel","FilterText","FilterInput","dispatch","useDispatch","changeFilter","Wrapper","ContactsPage"],"sourceRoot":""}